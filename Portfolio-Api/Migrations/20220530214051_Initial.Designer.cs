// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Portfolio_Api.Models;

#nullable disable

namespace Portfolio_Api.Migrations
{
    [DbContext(typeof(PortfolioDbContext))]
    [Migration("20220530214051_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Portfolio_Api.Models.BlogPost", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("blogposts");
                });

            modelBuilder.Entity("Portfolio_Api.Models.ClientInformation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("allowed_ip_range")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("approved")
                        .HasColumnType("boolean");

                    b.Property<string>("client_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("date_added")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ip_address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("clientinformation");
                });

            modelBuilder.Entity("Portfolio_Api.Models.Comment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("date_added")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("poster_username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("Portfolio_Api.Models.ProjectPost", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("extra_info")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("image_url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("links")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("projectposts");
                });

            modelBuilder.Entity("Portfolio_Api.Models.UserData", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("favorite_album")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("favorite_book")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("favorite_movie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("favorite_videogame")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("profile_picture_key")
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("userdata");
                });

            modelBuilder.Entity("Portfolio_Api.Models.ValidToken", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("validtokens");
                });
#pragma warning restore 612, 618
        }
    }
}
